# Your existing MongoDB and other configurations...
spring.security.user.name=${DB_USERNAME}
spring.security.user.password=${DB_PASSWORD}

# JWT Configuration
JWT_SECRET=${JWT_SECRET:TravelSriSecretKey2024ForHotelAndUserAuthentication}
jwt.expiration.ms=86400000

##for atlas
spring.data.mongodb.uri=${DB_ONLINE}

##for compass
#spring.data.mongodb.uri=${DB_URL}

#spring.data.mongodb.database=db
#spring.data.mongodb.port=27017
# Disable SSL validation (for development only)
#spring.data.mongodb.ssl.enabled=false
#spring.data.mongodb.authentication-database=admin
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.data.mongodb.uri=${DB_URL}

# PayHere Configuration
payhere.merchant.id=1231576
payhere.merchant.secret=NDg3MTk4Nzc4MTIyNzE0MTQ5MjMxMjMxNTQ3NzQ2Mjc2MzIwNQ==
payhere.api.base-url=https://sandbox.payhere.lk/pay/checkout
payhere.checkout.url=https://sandbox.payhere.lk/pay/checkout

# Application URLs
app.base.url=http://localhost:8080
app.api.url=http://localhost:8080

# CORS Configuration
cors.allowed.origins=http://localhost:3000,http://localhost:19006,exp://192.168.1.100:8081
payhere.sandbox=true
payhere.notify.url=http://your-domain.com/api/payments/payhere/notify

cors.allowed.methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed.headers=*

logging.level.com.example.student=DEBUG

server.servlet.context-path=/

spring.application.name=travel-app

# Logging Configuration
logging.level.com.example.student.controller.PayHereController=DEBUG
logging.level.com.example.student.services.PayHerePaymentServiceImpl=DEBUG
logging.level.com.example.student.utils.PayHereUtils=DEBUG
logging.level.com.example.student.controller.PaymentReturnController=INFO
